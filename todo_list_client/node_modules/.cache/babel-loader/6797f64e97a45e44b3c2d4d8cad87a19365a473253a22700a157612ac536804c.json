{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MAJBAR ISMAIL\\\\Desktop\\\\TodoList\\\\todo_list_client\\\\src\\\\Components\\\\AddTodoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTodoForm = ({\n  setTodos\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetch('http://localhost:5288/api/TodoItems', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        isComplete: false\n      })\n    }).then(response => response.json()).then(newTodo => {\n      // Update the UI list after insert to database\n      setTodos(todos => [...todos, newTodo]);\n      setName(\"\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"mb-3\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        className: \"form-control\",\n        placeholder: \"Add a new task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: \"fa-solid fa-plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(AddTodoForm, \"khHWglIDOK6oF5aUFHBJOjSLjW0=\");\n_c = AddTodoForm;\nexport default AddTodoForm;\nvar _c;\n$RefreshReg$(_c, \"AddTodoForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddTodoForm","setTodos","_s","name","setName","handleSubmit","event","preventDefault","fetch","method","headers","body","JSON","stringify","isComplete","then","response","json","newTodo","todos","onSubmit","className","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","FontAwesomeIcon","icon","_c","$RefreshReg$"],"sources":["C:/Users/MAJBAR ISMAIL/Desktop/TodoList/todo_list_client/src/Components/AddTodoForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\n\nconst AddTodoForm = ({ setTodos }) =>\n{\n  const [ name, setName ] = useState('');\n\n  const handleSubmit = (event) =>\n  {\n    event.preventDefault();\n    fetch('http://localhost:5288/api/TodoItems', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ name, isComplete: false })\n    })\n      .then(response => response.json())\n      .then(newTodo =>\n      {\n        // Update the UI list after insert to database\n        setTodos(todos => [ ...todos, newTodo ]);\n        setName(\"\");\n      });\n  };\n\n  return (\n    <form onSubmit={ handleSubmit } className=\"mb-3\">\n      <div className=\"input-group\">\n        <input\n          type=\"text\"\n          value={ name }\n          onChange={ (e) => setName(e.target.value) }\n          className=\"form-control\"\n          placeholder=\"Add a new task\"\n        />\n        <button className=\"btn btn-primary\" type=\"submit\">\n          <FontAwesomeIcon icon=\"fa-solid fa-plus\" />\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default AddTodoForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KACjC;EAAAC,EAAA;EACE,MAAM,CAAEC,IAAI,EAAEC,OAAO,CAAE,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMQ,YAAY,GAAIC,KAAK,IAC3B;IACEA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBC,KAAK,CAAC,qCAAqC,EAAE;MAC3CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEV,IAAI;QAAEW,UAAU,EAAE;MAAM,CAAC;IAClD,CAAC,CAAC,CACCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,OAAO,IACb;MACE;MACAjB,QAAQ,CAACkB,KAAK,IAAI,CAAE,GAAGA,KAAK,EAAED,OAAO,CAAE,CAAC;MACxCd,OAAO,CAAC,EAAE,CAAC;IACb,CAAC,CAAC;EACN,CAAC;EAED,oBACEL,OAAA;IAAMqB,QAAQ,EAAGf,YAAc;IAACgB,SAAS,EAAC,MAAM;IAAAC,QAAA,eAC9CvB,OAAA;MAAKsB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BvB,OAAA;QACEwB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAGrB,IAAM;QACdsB,QAAQ,EAAIC,CAAC,IAAKtB,OAAO,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAG;QAC3CH,SAAS,EAAC,cAAc;QACxBO,WAAW,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACFjC,OAAA;QAAQsB,SAAS,EAAC,iBAAiB;QAACE,IAAI,EAAC,QAAQ;QAAAD,QAAA,eAC/CvB,OAAA,CAACkC,eAAe;UAACC,IAAI,EAAC;QAAkB;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAAC9B,EAAA,CAvCIF,WAAW;AAAAmC,EAAA,GAAXnC,WAAW;AAyCjB,eAAeA,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}